services:
  mongodb-container:
    image: mongo:latest
    container_name: mongodb-container
    ports:
      - 27017:27017
    volumes:
      - ../docker-compose/mongodb-init:/docker-entrypoint-initdb.d
    networks:
      - orders-service-network

  orders-microservice:
    image: visualfxvault-ordersservice
    container_name: orders-microservice
    build:
      context: .
      dockerfile: APILayer/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - USERS_SERVICE_HOST=http://api-gateway-container
      - USERS_SERVICE_PORT=8080
      - PRODUCTS_SERVICE_HOST=http://api-gateway-container
      - PRODUCTS_SERVICE_PORT=8080
      - MONGO_HOST=mongodb-container
      - MONGO_PORT=27017
      - MONGO_DB=VisualFXVault_Orders
      - REDIS_HOST=redis-container
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq-container
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=rabbitmq-vfx
      - RABBITMQ_PASSWORD=pa55w0Rd
    ports:
      - 7000:8080
    networks:
      - orders-service-network
      - services-communication-network
    depends_on:
      - mongodb-container
      - products-microservice
      - users-microservice

  sqlserver-container:
    image: mcr.microsoft.com/mssql/server:latest
    container_name: sqlserver-container
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=pa55w0Rd
    hostname: sqlserver-container
    ports:
      - "1434:1433"
    networks:
      - products-service-network

  products-microservice:
    image: visualfxvault-productsservice:initial
    container_name: products-microservice
    ports:
      - "6001:8080"
    environment:
      - ASPNETCORE_HTTP_PORT=8080
      - ASPNETCORE_ENVIRONMENT=Development
      - SQLSERVER_HOST=sqlserver-container
      - SQLSERVER_PORT=1433
      - SQLSERVER_DATABASE=VisualFXVault.ProductsService
      - SQLSERVER_USER=sa
      - SQLSERVER_PASSWORD=pa55w0Rd
      - RABBITMQ_HOST=rabbitmq-container
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=rabbitmq-vfx
      - RABBITMQ_PASSWORD=pa55w0Rd
    networks:
      - products-service-network
      - services-communication-network
    depends_on:
      - sqlserver-container

  postgres-container:
    image: postgres:17.4
    container_name: postgres-container
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=VisualFXVaultUsers
      - POSTGRES_PASSWORD=pa55w0Rd
    hostname: postgres-container
    ports:
      - "5433:5432"
    networks:
      - users-service-network
    volumes: 
      - ../docker-compose/postgres-init:/docker-entrypoint-initdb.d

  users-microservice:
    image: visualfxvault-usersservice:initial
    container_name: users-microservice
    ports:
      - "5001:9090"
    environment:
      - ASPNETCORE_HTTP_PORT=8080
      - ASPNETCORE_ENVIRONMENT=Development
      - POSTGRES_HOST=postgres-container
      - POSTGRES_PORT=5432
      - POSTGRES_DB=VisualFXVaultUsers
      - POSTGRES_PASSWORD=pa55w0Rd
      - POSTGRES_USER=postgres
    networks:
      - users-service-network
      - services-communication-network
    depends_on:
      - postgres-container

  redis:
    image: redis:latest
    container_name: redis-container
    ports:
      - "6379:6379"
    volumes:
      - ../docker-compose/redis-cache:/data
    networks:
      - services-communication-network

  rabbitmq:
    image: rabbitmq:4.1.2-management
    container_name: rabbitmq-container
    ports:
      - "15672:15672"  # Management UI
      - "5672:5672"    # RabbitMQ
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmq-vfx
      - RABBITMQ_DEFAULT_PASS=pa55w0Rd
    networks:
      - services-communication-network
    
  api-gateway:
    image: visualfxvault-apigateway:initial
    container_name: api-gateway-container
    build:
      context: .
      dockerfile: APIGateway/Dockerfile
    ports:
      - "4000:8080"
    networks:
      - services-communication-network
    depends_on:
      - orders-microservice
      - products-microservice
      - users-microservice

networks:
  orders-service-network:
    driver: bridge
  products-service-network:
    driver: bridge
  users-service-network:
    driver: bridge
  services-communication-network:
    driver: bridge